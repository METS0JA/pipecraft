[[{"tooltip":"demultiplex data to per-sample files based on specified index file. Note that for read1 and read2 will get .R1 and .R2 identifiers when demultiplexing paired-end data","scriptName":"demux_paired_end_data.sh","imageName":"pipecraft/cutadapt:3.5","serviceName":"demultiplex","disabled":"demultiplexed","selected":false,"showExtra":false,"extraInputs":[{"name":"cores","value":1,"disabled":"never","tooltip":"number of cores to use","type":"numeric","rules":[null]},{"name":"min_seq_length","value":32,"disabled":"never","tooltip":"minimum length of the output sequence","type":"numeric","rules":[null]},{"name":"no_indels","value":true,"disabled":"never","tooltip":"do not allow insertions or deletions in the index sequence","type":"bool"}],"Inputs":[{"name":"index_file","value":"undefined","btnName":"select fasta","disabled":"never","tooltip":"select your fasta formatted indexes file for demultiplexing, where fasta headers are sample names, and sequences are sample specific index or index combination","type":"file"},{"name":"index_mismatch","value":0,"disabled":"never","tooltip":"allowed mismatches during the index search","type":"numeric","rules":[null]},{"name":"overlap","value":8,"disabled":"never","tooltip":"number of overlap bases with the index. Recommended overlap is the max length of the index for confident sequence assignments to samples in the indexes file","type":"numeric","rules":[null]}]},{"tooltip":"reorient reads based on specified primer sequences","scriptName":"reorient_paired_end_reads.sh","imageName":"pipecraft/reorient:1","serviceName":"reorient","disabled":"never","selected":true,"showExtra":false,"extraInputs":[],"Inputs":[{"name":"mismatches","value":1,"disabled":"never","tooltip":"allowed mismatches in the primer search","type":"numeric","rules":[null]},{"name":"forward_primers","value":["ACCTGCGGARGGATCA"],"disabled":"never","tooltip":"specify forward primer (5'-3'); add up to 13 primers","type":"chip","iupac":true,"rules":[null]},{"name":"reverse_primers","value":["GAGATCCRTTGYTRAAAGTT"],"disabled":"never","tooltip":"specify reverse primer (3'-5'); add up to 13 primers","type":"chip","iupac":true,"rules":[null]}]},{"tooltip":"remove primers sequences from the reads","scriptName":"cut_primers_paired_end_reads.sh","imageName":"pipecraft/cutadapt:3.5","serviceName":"cut primers","disabled":"never","selected":true,"showExtra":false,"extraInputs":[{"name":"cores","value":1,"disabled":"never","tooltip":"number of cores to use. For paired-end data in fasta format, set to 1 [default]. For fastq formats you may set the value to 0 to use all cores","type":"numeric","rules":[null]},{"name":"min_seq_length","value":32,"disabled":"never","tooltip":"minimum length of the output sequence","type":"numeric","rules":[null]},{"name":"no_indels","value":true,"disabled":"never","tooltip":"do not allow insertions or deletions is primer search. Mismatches are the only type of errors accounted in the error rate parameter. ","type":"bool"}],"Inputs":[{"name":"forward_primers","value":["ACCTGCGGARGGATCA"],"disabled":"never","tooltip":"specify forward primer (5'-3'); add up to 13 primers","type":"chip","iupac":true,"rules":[null]},{"name":"reverse_primers","value":["GAGATCCRTTGYTRAAAGTT"],"disabled":"never","tooltip":"specify reverse primer (3'-5'); add up to 13 primers","type":"chip","iupac":true,"rules":[null]},{"name":"mismatches","value":1,"disabled":"never","tooltip":"allowed mismatches in the primer search","type":"numeric","rules":[null]},{"name":"min_overlap","value":21,"disabled":"never","tooltip":"number of overlap bases with the primer sequence. Partial matches are allowed, but short matches may occur by chance, leading to erroneously clipped bases. Specifying higher overlap than the length of primer sequnce will still clip the primer (e.g. primer length is 22 bp, but overlap is specified as 25 - this does not affect the identification and clipping of the primer as long as the match is in the specified mismatch error range)","type":"numeric","rules":[null]},{"name":"seqs_to_keep","items":["keep_all","keep_only_linked"],"value":"keep_all","disabled":"never","tooltip":"keep sequences where at least one primer was found (fwd or rev); recommended when cutting primers from paired-end data (unassembled), when individual R1 or R2 read lenghts are shorther than the expected amplicon length. 'keep_only_linked' = keep sequences if primers are found in both ends (fwd…rev); discards the read if both primers were not found in this read","type":"select"},{"name":"pair_filter","items":["both","any"],"value":"both","disabled":"never","tooltip":"applies only for paired-end data. 'both', means that a read is discarded only if both, corresponding R1 and R2, reads  do not contain primer strings (i.e. a read is kept if R1 contains primer string, but no primer string found in R2 read). Option 'any' discards the read if primers are not found in both, R1 and R2 reads","type":"select"}]},{"tooltip":"quality filtering with DADA2 'filterAndTrim' function","scriptName":"dada2-quality.R","imageName":"pipecraft/dada2:1.20","serviceName":"quality filtering","disabled":"never","selected":"always","showExtra":false,"extraInputs":[],"Inputs":[{"name":"read_R1","value":["_R1"],"disabled":"single_end","tooltip":"identifyer string that is common for all R1 reads (e.g. when all R1 files have '.R1' string, then enter '\\.R1'. Note that backslash is only needed to escape dot regex; e.g. when all R1 files have '_R1' string, then enter '_R1'.). When demultiplexing data in during this workflow, then specify as '\\.R1'","type":"chip","rules":[null]},{"name":"read_R2","value":["_R2"],"disabled":"single_end","tooltip":"identifyer string that is common for all R2 reads (e.g. when all R2 files have '.R2' string, then enter '\\.R2'. Note that backslash is only needed to escape dot regex; e.g. when all R2 files have '_R1' string, then enter '_R2'.). When demultiplexing data in during this workflow, then specify as '\\.R2'","type":"chip","rules":[null]},{"name":"samp_ID","value":["_R"],"disabled":"never","tooltip":"identifyer string that separates the sample name from redundant charachters (e.g. file name = sample1.R1.fastq, then underscore '\\.' would be the 'identifier string' (sample name = sampl84)); note that backslash is only needed to escape dot regex (e.g. when file name = sample1_R1.fastq then specify as '_')","type":"chip","rules":[null]},{"name":"maxEE","value":2,"disabled":"never","tooltip":"discard sequences with more than the specified number of expected errors","type":"numeric","rules":[null]},{"name":"maxN","value":0,"disabled":"never","tooltip":"discard sequences with more than the specified number of N’s (ambiguous bases)","type":"numeric","rules":[null]},{"name":"minLen","value":20,"disabled":"never","tooltip":"remove reads with length less than minLen. minLen is enforced after all other trimming and truncation","type":"numeric","rules":[null]},{"name":"truncQ","value":2,"disabled":"never","tooltip":"truncate reads at the first instance of a quality score less than or equal to truncQ","type":"numeric","rules":[null]},{"name":"truncLen","value":0,"disabled":"never","tooltip":"truncate reads after truncLen bases (applies to R1 reads when working with paired-end data). Reads shorter than this are discarded. Explore quality profiles (with QualityCheck module) see whether poor quality ends needs to truncated","type":"numeric","rules":[null]},{"name":"truncLen_R2","value":0,"disabled":"single_end","tooltip":"truncate R2 reads after truncLen bases. Reads shorter than this are discarded. Explore quality profiles (with QualityCheck module) see whether poor quality ends needs to truncated","type":"numeric","rules":[null]},{"name":"maxLen","value":9999,"disabled":"never","tooltip":"remove reads with length greater than maxLen. maxLen is enforced on the raw reads. In dada2, the default = Inf, but here set as 9999","type":"numeric","rules":[null]},{"name":"minQ","value":0,"disabled":"never","tooltip":"after truncation, reads contain a quality score below minQ will be discarded","type":"numeric","rules":[null]}]},{"tooltip":"select the denoising options for DADA2 'dada' function","scriptName":"dada2-assemble.R","imageName":"pipecraft/dada2:1.20","serviceName":"denoise","selected":"always","disabled":"never","showExtra":false,"extraInputs":[],"Inputs":[{"name":"pool","items":["FALSE","TRUE","psuedo"],"value":"FALSE","disabled":"never","tooltip":"if pool = TRUE, the algorithm will pool together all samples prior to sample inference. Pooling improves the detection of rare variants, but is computationally more expensive. If pool = 'pseudo', the algorithm will perform pseudo-pooling between individually processed samples. This argument has no effect if only 1 sample is provided, and pool does not affect error rates, which are always estimated from pooled observations across samples","type":"select"},{"name":"selfConsist","disabled":"never","value":false,"tooltip":"if selfConsist = TRUE, the algorithm will alternate between sample inference and error rate estimation until convergence","type":"bool"},{"name":"qualityType","items":["Auto","FastqQuality"],"value":"Auto","disabled":"never","tooltip":"means to attempt to auto-detect the fastq quality encoding. This may fail for PacBio files with uniformly high quality scores, in which case use 'FastqQuality'","type":"select"}]},{"tooltip":"assemble paired-end reads (R1 and R2) with DADA2 'mergePairs' function","scriptName":"dada2-assemble.R","imageName":"pipecraft/dada2:1.20","serviceName":"merge Pairs","selected":"always","disabled":"never","showExtra":false,"extraInputs":[],"Inputs":[{"name":"minOverlap","value":12,"disabled":"never","tooltip":"the minimum length of the overlap required for merging the forward and reverse reads","type":"numeric","rules":[null]},{"name":"maxMismatch","value":0,"disabled":"never","tooltip":"the maximum mismatches allowed in the overlap region","type":"numeric","rules":[null]},{"name":"trimOverhang","value":false,"disabled":"never","tooltip":"if TRUE, overhangs in the alignment between the forwards and reverse read are trimmed off. Overhangs are when the reverse read extends past the start of the forward read, and vice-versa, as can happen when reads are longer than the amplicon and read into the other-direction primer region","type":"bool"},{"name":"justConcatenate","value":false,"disabled":"never","tooltip":"if TRUE, the forward and reverse-complemented reverse read are concatenated rather than merged, with a NNNNNNNNNN (10 Ns) spacer inserted between them","type":"bool"}]},{"tooltip":"remove chimeras with DADA2 'removeBimeraDenovo' function","scriptName":"dada2-chimera.R","imageName":"pipecraft/dada2:1.20","serviceName":"chimera filtering","disabled":"never","selected":"always","showExtra":false,"extraInputs":[],"Inputs":[{"name":"method","items":["consensus","pooled","per-sample"],"value":"consensus","disabled":"never","tooltip":"'consensus' - the samples are independently checked for chimeras, and a consensus decision on each sequence variant is made. If 'pooled', the samples are all pooled together for chimera identification. If 'per-sample', the samples are independently checked for chimeras","type":"select"}]},{"tooltip":"assign taxonomy with DADA2 'assignTaxonomy' function against the selected database. Untick the checkbox to skip this step","scriptName":"dada2-classifier.R","imageName":"pipecraft/dada2:1.20","serviceName":"assign Taxonomy","disabled":"never","selected":true,"showExtra":false,"extraInputs":[],"Inputs":[{"name":"download databases","value":"https://benjjneb.github.io/dada2/training.html","disabled":"never","type":"link","tooltip":"link to download DADA2-formatted reference databases"},{"name":"dada2_database","btnName":"select fasta","value":"C:/Users/martin/Desktop/sh_general_release_dynamic_10.05.2021.fasta","disabled":"never","tooltip":"select a reference database fasta file for taxonomy annotation","type":"file"},{"name":"minBoot","value":50,"disabled":"never","tooltip":"the minimum bootstrap confidence for assigning a taxonomic level","type":"numeric","rules":[null]},{"name":"tryRC","value":false,"disabled":"never","tooltip":"the reverse-complement of each sequences will be used for classification if it is a better match to the reference sequences than the forward sequence","type":"bool"}]}],"ASVs_workflow"]